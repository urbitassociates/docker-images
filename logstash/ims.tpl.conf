input {
  tcp {
    port => 5000
    type => syslog
  }
  udp {
    port => 5000
    type => syslog
    buffer_size => 32768
  }
}
filter {
  mutate {
    rename => { "message" => "message_raw" }
  }
}
filter {
  grok {
    match => [
      "message_raw", "<%{NUMBER}>1 lumen.%{LOGLEVEL:level}: (?<exception_class>[\w\\]+):? (?<message>.*) in (?<source_file>[-\w\/.\s]+):%{NUMBER:source_line} Stack trace: (?<stack_trace>.*) \[] (?<extra_json>\{.*})",
      "message_raw", "<%{NUMBER}>1 lumen.%{LOGLEVEL:level}: HTTP/%{NUMBER:http_version} %{POSINT:status_code} (?<message>[\w\s]*)<EOL>(?<response_headers>.*)<EOL>(?<response_body>((\[|\{).*(}|]))?)<EOF> \[] (?<extra_json>\{.*})",
      "message_raw", "<%{NUMBER}>1 lumen.%{LOGLEVEL:level}: %{DATA:message} \[] (?<extra_json>\{.*})",
      "message_raw", "<%{NUMBER}>1 %{TIMESTAMP_ISO8601:timestamp} %{WORD:container_id} %{WORD:container} %{NUMBER} \- \- (?<message>.*)"
    ]
  }
}
filter {
  mutate {
    split => {
      "stack_trace" => "#"
      "response_headers" => "<EOL>"
    }
  }
}
filter {
  json {
    source => "extra_json"
    remove_field => "extra_json"
  }
}


output {
    amazon_es {
        hosts => ["$ELASTICSEARCH_AWS_HOST"]
        region => "$AWS_REGION"
        aws_access_key_id => "$AWS_ACCESS_KEY_ID"
        aws_secret_access_key => "$AWS_SECRET_ACCESS_KEY"
        index => "$ENVIRONMENT-logs-%{+YYY.MM.dd}"
    }
}